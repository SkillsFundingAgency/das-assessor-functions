{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "type": "string",
            "metadata": {
                "description": "Short name of the environment. Used for the reference of the environment in table storage"
            }
        },
        "resourceEnvironmentName": {
            "type": "string",
            "metadata": {
                "description": "Short name of the environment. Used for the naming of azure resources"
            }
        },
        "serviceName": {
            "type": "string",
            "metadata": {
                "description": "Short name of the service. Used for the name of resources created"
            }
        },
        "deployPrivateLinkedScopedResource": {
            "type": "bool"
        },
        "storageAccountAllowedIPs": {
            "type": "array",
            "metadata": {
                "description": "Allowed IP's"
            },
            "defaultValue": []
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "appServicePlanSize": {
            "type": "string",
            "allowedValues": [
                "1",
                "2",
                "3"
            ],
            "metadata": {
                "description": "The app service plan size"
            },
            "defaultValue": "1"
        },
        "appServicePlanInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of the app service plan instance"
            },
            "defaultValue": 2
        },
        "functionsExtensionVersion": {
            "type": "string",
            "defaultValue": "~4"
        },
        "sharedApimResourceGroup": {
            "type": "string"
        },
        "sharedApimName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedEnvVirtualNetworkName": {
            "type": "string"
        },
        "subnetObject": {
            "type": "object"
        },
        "subnetServiceEndpointList": {
            "type": "array"
        },
        "subnetDelegations": {
            "type": "array"
        },
        "storagePolicyRules": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "A list of management policy rules"
            }
        },
        "sharedSQLServerName": {
            "type": "string"
        },
        "utcNow": {
            "type": "string",
            "defaultValue": "[utcNow()]",
            "metadata": {
                "description": "Used to datestamp resource names to ensure that a unique record is added to deployment history"
            }
        },
        "workerAccessRestrictions": {
            "type": "array"
        },
        "minimumTlsVersion": {
            "type": "string",
            "defaultValue": "TLS1_2"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "appServicePlanName": "[concat(variables('resourceNamePrefix'),'-asp')]",
        "functionAppName": "[concat(variables('resourceNamePrefix'),'-fa')]",
        "storageAccountName": "[concat('das',toLower(parameters('resourceEnvironmentName')),parameters('serviceName'),'str')]",
        "privateLinkScopeName": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-shared-ampls'))]"
    },
    "resources": [
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('functionAppName'), '-apim-subscription-key-', parameters('utcNow'))]",
            "resourceGroup": "[parameters('sharedApimResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'apim/apim-subscription.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimName": {
                        "value": "[parameters('sharedApimName')]"
                    },
                    "subscriptionName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "subscriptionScope": {
                        "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('sharedApimResourceGroup'), '/providers/Microsoft.ApiManagement/service/', parameters('sharedApimName'), '/products/AssessorsOuterApi')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('subnetObject').name, '-', parameters('utcNow'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetObject').name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[parameters('subnetObject').addressSpace]"
                    },
                    "serviceEndpointList": {
                        "value": "[parameters('subnetServiceEndpointList')]"
                    },
                    "delegations": {
                        "value": "[parameters('subnetDelegations')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('subnetObject').name, '-sql-firewall-rule-', parameters('utcNow'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'sql-server-firewall-rules.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serverName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    },
                    "subnetResourceIdList": {
                        "value": "[createArray(reference(concat(parameters('subnetObject').name, '-', parameters('utcNow'))).outputs.SubnetResourceId.value)]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServicePlanName'), '-', parameters('utcNow'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('appServicePlanSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('appServicePlanInstances')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('functionAppName'), '-app-insights-', parameters('utcNow'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "attachedService": {
                        "value": "[variables('functionAppName')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('deployPrivateLinkedScopedResource')]",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('functionAppName'), '-private-link-scoped-', parameters('utcNow'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'private-linked-scoped-resource.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "privateLinkScopeName": {
                        "value": "[variables('privateLinkScopeName')]"
                    },
                    "scopedResourceName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "scopedResourceId": {
                        "value": "[reference(concat(variables('functionAppName'), '-app-insights-', parameters('utcNow'))).outputs.AppInsightsResourceId.value]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('functionAppName'), '-', parameters('utcNow'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "netFrameworkVersion": {
                        "value": "v6.0"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('subnetObject').name, '-', parameters('utcNow'))).outputs.SubnetResourceId.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('workerAccessRestrictions')]"
                    },
                    "functionAppAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "AzureWebJobsStorage",
                                    "value": "[reference(concat(variables('storageAccountName'), '-', parameters('utcNow'))).outputs.storageConnectionString.value]"
                                },
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference(concat(variables('functionAppName'), '-app-insights-', parameters('utcNow'))).outputs.InstrumentationKey.value]"
                                },
                                {
                                    "name": "FUNCTIONS_EXTENSION_VERSION",
                                    "value": "[parameters('functionsExtensionVersion')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[toUpper(parameters('environmentName'))]"
                                },
                                {
                                    "name": "LoggingRedisConnectionString",
                                    "value": "[parameters('loggingRedisConnectionString')]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "AppName",
                                    "value": "das-assessor-functions"
                                },
                                {
                                    "name": "FUNCTIONS_WORKER_RUNTIME",
                                    "value": "dotnet"
                                },
                                {
                                    "name": "WEBSITE_RUN_FROM_PACKAGE",
                                    "value": "1"
                                }
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('appServicePlanName'), '-', parameters('utcNow'))]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('storageAccountName'), '-', parameters('utcNow'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "allowedIpAddressesList": {
                        "value": "[parameters('storageAccountAllowedIPs')]"
                    },
                    "subnetResourceIdList": {
                        "value": "[createArray(reference(concat(parameters('subnetObject').name, '-', parameters('utcNow'))).outputs.SubnetResourceId.value)]"
                    },
                    "storageKind": {
                        "value": "StorageV2"
                    },
                    "allowSharedKeyAccess": {
                        "value": true
                    },
                    "minimumTlsVersion": {
                        "value": "[parameters('minimumTlsVersion')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('storageAccountName'), '-policies-', parameters('utcNow'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-management-policy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "policyRules": {
                        "value": "[parameters('storagePolicyRules')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('storageAccountName'), '-', parameters('utcNow'))]"
            ]
        }
    ],
    "outputs": {
        "FunctionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        },
        "StorageAccountConnectionString": {
            "type": "string",
            "value": "[reference(concat(variables('storageAccountName'), '-', parameters('utcNow'))).outputs.storageConnectionString.value]"
        }
    }
}
